version: '3.4'
services:
  swag:
    image: linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL=${DNS_URL}
      - SUBDOMAINS=wildcard
      - VALIDATION=duckdns
      - DUCKDNSTOKEN=${DNS_TOKEN}
      - EMAIL=${DNS_EMAIL}
    volumes:
      - ${USERDIR}/swag:/config
    ports:
      - 443:443
      - 80:80
    restart: always

  mariadb:
    image: ghcr.io/linuxserver/mariadb
    container_name: mariadb
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=ha_db
      - MYSQL_USER=homeassistant
      - MYSQL_PASSWORD=${HA_MYSQL_PASSWORD}
    volumes:
      - ${USERDIR}/mariadb:/config
    ports:
      - 3306:3306
    restart: unless-stopped

  unifi:
    image: ghcr.io/linuxserver/unifi-controller
    container_name: unifi
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${USERDIR}/unifi:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 8443:8443
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514 #optional
    restart: unless-stopped

  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:stable
    volumes:
      - ${USERDIR}/homeassistant:/config
      - /mnt/store/media:/media
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    restart: unless-stopped
    network_mode: host

  nodered:
    image: nodered/node-red
    container_name: node-red
    volumes:
      - ${USERDIR}/node-red:/data
      - ${USERDIR}/shared:/shared
    ports:
      - "1880:1880"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    user: "${PUID}:${PGID}"
    restart: unless-stopped

  plex:
    image: ghcr.io/linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - /mnt/store/media:/config
    restart: unless-stopped

  transmission-vpn:
    container_name: transmission-vpn
    image: haugene/transmission-openvpn
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    restart: unless-stopped
    ports:
    - "9091:9091"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/store/downloads:/data
    environment:
      - OPENVPN_PROVIDER=PUREVPN
      - OPENVPN_CONFIG=de2-ovpn-tcp
      - OPENVPN_USERNAME=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASSWORD}
      - LOCAL_NETWORK=192.168.1.0/24
      #- PUID=${PUID} 
      #- PGID=${PGID}
      - TZ=${TZ}
      

  radarr:
    image: "linuxserver/radarr"
    container_name: "radarr"
    volumes:
      - ${USERDIR}/radarr:/config
      - /mnt/store/downloads:/data
      - /mnt/store/media/movies:/movies
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "7878:7878"
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

  sonarr:
    image: "linuxserver/sonarr"
    container_name: "sonarr"
    volumes:
      - ${USERDIR}/sonarr:/config
      - /mnt/store/downloads:/data
      - /mnt/store/media/series:/tv
      - "/etc/localtime:/etc/localtime:ro"
    ports:
        - "8989:8989"
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

  jackett:
    image: "linuxserver/jackett"
    container_name: "jackett"
    volumes:
      - ${USERDIR}/jackett:/config
      - /mnt/store/downloads/completed:/downloads
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "9117:9117"
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

  organizr:
    image: organizr/organizr
    container_name: organizr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${USERDIR}/organizr:/config
    ports:
      - 9983:80
    restart: unless-stopped

  ombi:
    image: "linuxserver/ombi"
    container_name: ombi
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${USERDIR}/omni:/config
    ports:
      - 3579:3579
    restart: unless-stopped

  timemachine:
    container_name: timemachine
    image: mbentley/timemachine:smb
    network_mode: host
    environment:
      - CUSTOM_SMB_CONF=false
      - CUSTOM_USER=false
      - DEBUG_LEVEL=1
      - HIDE_SHARES=no
      - EXTERNAL_CONF=
      - 'MIMIC_MODEL=TimeCapsule8,119'
      - TM_USERNAME=timemachine
      - TM_GROUPNAME=timemachine
      - TM_UID=${PUID}
      - TM_GID=${PGID}
      - PASSWORD=${TM_PASSWORD}
      - SET_PERMISSIONS=false
      - SHARE_NAME=TimeMachine
      - SMB_INHERIT_PERMISSIONS=no
      - SMB_NFS_ACES=yes
      - SMB_PORT=445
      - 'SMB_VFS_OBJECTS=fruit streams_xattr'
      - 'VOLUME_SIZE_LIMIT=2 T'
      - WORKGROUP=WORKGROUP
    restart: unless-stopped
    volumes:
      - /mnt/store/backup:/opt/timemachine
      - ${USERDIR}/samba/timemachine-var-lib-samba:/var/lib/samba
      - ${USERDIR}/samba/timemachine-var-cache-samba:/var/cache/samba
      - ${USERDIR}/samba/timemachine-run-samba:/run/samba
